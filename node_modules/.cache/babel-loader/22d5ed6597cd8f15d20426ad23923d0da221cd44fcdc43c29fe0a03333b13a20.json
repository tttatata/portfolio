{"ast":null,"code":"\"use client\";\n\n// src/use-dropdown.ts\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { dropdown } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { useMemo, useRef } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useDropdown(props) {\n  const {\n    as,\n    triggerRef: triggerRefProp,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    type = \"menu\",\n    trigger = \"press\",\n    placement = \"bottom\",\n    isDisabled = false,\n    closeOnSelect = true,\n    shouldBlockScroll = true,\n    classNames: classNamesProp,\n    disableAnimation = false,\n    onClose,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const triggerRef = useRef(null);\n  const menuTriggerRef = triggerRefProp || triggerRef;\n  const menuRef = useRef(null);\n  const popoverRef = useRef(null);\n  const state = useMenuTriggerState({\n    trigger,\n    isOpen,\n    defaultOpen,\n    onOpenChange: isOpen2 => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const {\n    menuTriggerProps,\n    menuProps\n  } = useMenuTrigger({\n    type,\n    trigger,\n    isDisabled\n  }, state, menuTriggerRef);\n  const classNames = useMemo(() => dropdown({\n    className\n  }), [className]);\n  const onMenuAction = menuCloseOnSelect => {\n    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {\n      return;\n    }\n    if (closeOnSelect) {\n      state.close();\n    }\n  };\n  const getPopoverProps = function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      state,\n      placement,\n      ref: popoverRef,\n      disableAnimation,\n      shouldBlockScroll,\n      scrollRef: menuRef,\n      triggerRef: menuTriggerRef,\n      ...mergeProps(otherProps, props2),\n      classNames: {\n        ...classNamesProp,\n        ...props2.classNames,\n        content: clsx(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)\n      }\n    };\n  };\n  const getMenuTriggerProps = function () {\n    let originalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const {\n      onKeyDown,\n      onPress,\n      onPressStart,\n      ...otherMenuTriggerProps\n    } = menuTriggerProps;\n    return {\n      ...mergeProps(otherMenuTriggerProps, {\n        isDisabled: props.isDisabled,\n        originalProps\n      }),\n      ref: mergeRefs(_ref, triggerRef)\n    };\n  };\n  const getMenuProps = function (props2) {\n    let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return {\n      ref: mergeRefs(_ref, menuRef),\n      menuProps,\n      ...mergeProps(props2, {\n        onAction: () => onMenuAction(props2 == null ? void 0 : props2.closeOnSelect)\n      })\n    };\n  };\n  return {\n    Component,\n    menuRef,\n    menuProps,\n    classNames,\n    closeOnSelect,\n    onClose: state.close,\n    autoFocus: state.focusStrategy || true,\n    disableAnimation,\n    getPopoverProps,\n    getMenuProps,\n    getMenuTriggerProps\n  };\n}\nexport { useDropdown };","map":{"version":3,"names":["useMenuTriggerState","useMenuTrigger","dropdown","clsx","mergeRefs","useMemo","useRef","mergeProps","useDropdown","props","as","triggerRef","triggerRefProp","isOpen","defaultOpen","onOpenChange","type","trigger","placement","isDisabled","closeOnSelect","shouldBlockScroll","classNames","classNamesProp","disableAnimation","onClose","className","otherProps","Component","menuTriggerRef","menuRef","popoverRef","state","isOpen2","menuTriggerProps","menuProps","onMenuAction","menuCloseOnSelect","close","getPopoverProps","props2","arguments","length","undefined","ref","scrollRef","content","getMenuTriggerProps","originalProps","_ref","onKeyDown","onPress","onPressStart","otherMenuTriggerProps","getMenuProps","onAction","autoFocus","focusStrategy"],"sources":["D:/TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17/frontend/node_modules/@nextui-org/dropdown/dist/chunk-DHSE475P.mjs"],"sourcesContent":["\"use client\";\n\n// src/use-dropdown.ts\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { dropdown } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { useMemo, useRef } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useDropdown(props) {\n  const {\n    as,\n    triggerRef: triggerRefProp,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    type = \"menu\",\n    trigger = \"press\",\n    placement = \"bottom\",\n    isDisabled = false,\n    closeOnSelect = true,\n    shouldBlockScroll = true,\n    classNames: classNamesProp,\n    disableAnimation = false,\n    onClose,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const triggerRef = useRef(null);\n  const menuTriggerRef = triggerRefProp || triggerRef;\n  const menuRef = useRef(null);\n  const popoverRef = useRef(null);\n  const state = useMenuTriggerState({\n    trigger,\n    isOpen,\n    defaultOpen,\n    onOpenChange: (isOpen2) => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const { menuTriggerProps, menuProps } = useMenuTrigger(\n    { type, trigger, isDisabled },\n    state,\n    menuTriggerRef\n  );\n  const classNames = useMemo(\n    () => dropdown({\n      className\n    }),\n    [className]\n  );\n  const onMenuAction = (menuCloseOnSelect) => {\n    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {\n      return;\n    }\n    if (closeOnSelect) {\n      state.close();\n    }\n  };\n  const getPopoverProps = (props2 = {}) => ({\n    state,\n    placement,\n    ref: popoverRef,\n    disableAnimation,\n    shouldBlockScroll,\n    scrollRef: menuRef,\n    triggerRef: menuTriggerRef,\n    ...mergeProps(otherProps, props2),\n    classNames: {\n      ...classNamesProp,\n      ...props2.classNames,\n      content: clsx(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)\n    }\n  });\n  const getMenuTriggerProps = (originalProps = {}, _ref = null) => {\n    const { onKeyDown, onPress, onPressStart, ...otherMenuTriggerProps } = menuTriggerProps;\n    return {\n      ...mergeProps(otherMenuTriggerProps, { isDisabled: props.isDisabled, originalProps }),\n      ref: mergeRefs(_ref, triggerRef)\n    };\n  };\n  const getMenuProps = (props2, _ref = null) => {\n    return {\n      ref: mergeRefs(_ref, menuRef),\n      menuProps,\n      ...mergeProps(props2, { onAction: () => onMenuAction(props2 == null ? void 0 : props2.closeOnSelect) })\n    };\n  };\n  return {\n    Component,\n    menuRef,\n    menuProps,\n    classNames,\n    closeOnSelect,\n    onClose: state.close,\n    autoFocus: state.focusStrategy || true,\n    disableAnimation,\n    getPopoverProps,\n    getMenuProps,\n    getMenuTriggerProps\n  };\n}\n\nexport {\n  useDropdown\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}