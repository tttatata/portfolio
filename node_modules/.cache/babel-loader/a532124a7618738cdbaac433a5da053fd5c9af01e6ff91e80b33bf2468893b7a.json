{"ast":null,"code":"// import { createReducer } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   cart: localStorage.getItem(\"cartItems\")\n//     ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//     : [],\n// };\n\n// export const cartReducer = createReducer(initialState, {\n//   addToCart: (state, action) => {\n//     const item = action.payload;\n//     const isItemExist = state.cart.find((i) => i._id === item._id);\n//     if (isItemExist) {\n//       return {\n//         ...state,\n//         cart: state.cart.map((i) => (i._id === isItemExist._id ? item : i)),\n//       };\n//     } else {\n//       return {\n//         ...state,\n//         cart: [...state.cart, item],\n//       };\n//     }\n//   },\n\n//   removeFromCart: (state, action) => {\n//     return {\n//       ...state,\n//       cart: state.cart.filter((i) => i._id !== action.payload),\n//     };\n//   },\n// });\nimport { createReducer } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isAuthenticated: false\n};\nexport const cartReducer = createReducer(initialState, {\n  // update user address\n  updateUserCartRequest: state => {\n    state.cartloading = true;\n  },\n  updateUserCartSuccess: (state, action) => {\n    state.cartloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  },\n  updateUserCartFailed: (state, action) => {\n    state.cartloading = false;\n    state.error = action.payload;\n  },\n  //\n  LoadUserCartRequest: state => {\n    state.loading = true;\n  },\n  LoadUserCartSuccess: (state, action) => {\n    state.isAuthenticated = true;\n    state.loading = false;\n    state.cart = action.payload;\n  },\n  LoadUserCartFail: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n    state.isAuthenticated = false;\n  }\n});","map":{"version":3,"names":["createReducer","initialState","isAuthenticated","cartReducer","updateUserCartRequest","state","cartloading","updateUserCartSuccess","action","successMessage","payload","user","updateUserCartFailed","error","LoadUserCartRequest","loading","LoadUserCartSuccess","cart","LoadUserCartFail"],"sources":["D:/TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17/frontend/src/redux/reducers/cart.js"],"sourcesContent":["// import { createReducer } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   cart: localStorage.getItem(\"cartItems\")\n//     ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//     : [],\n// };\n\n// export const cartReducer = createReducer(initialState, {\n//   addToCart: (state, action) => {\n//     const item = action.payload;\n//     const isItemExist = state.cart.find((i) => i._id === item._id);\n//     if (isItemExist) {\n//       return {\n//         ...state,\n//         cart: state.cart.map((i) => (i._id === isItemExist._id ? item : i)),\n//       };\n//     } else {\n//       return {\n//         ...state,\n//         cart: [...state.cart, item],\n//       };\n//     }\n//   },\n\n//   removeFromCart: (state, action) => {\n//     return {\n//       ...state,\n//       cart: state.cart.filter((i) => i._id !== action.payload),\n//     };\n//   },\n// });\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isAuthenticated: false,\n};\n\nexport const cartReducer = createReducer(initialState, {\n  // update user address\n  updateUserCartRequest: (state) => {\n    state.cartloading = true;\n  },\n  updateUserCartSuccess: (state, action) => {\n    state.cartloading = false;\n    state.successMessage = action.payload.successMessage;\n    state.user = action.payload.user;\n  },\n  updateUserCartFailed: (state, action) => {\n    state.cartloading = false;\n    state.error = action.payload;\n  },\n\n  //\n  LoadUserCartRequest: (state) => {\n    state.loading = true;\n  },\n  LoadUserCartSuccess: (state, action) => {\n    state.isAuthenticated = true;\n    state.loading = false;\n    state.cart = action.payload;\n  },\n  LoadUserCartFail: (state, action) => {\n    state.loading = false;\n    state.error = action.payload;\n    state.isAuthenticated = false;\n  },\n});\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGH,aAAa,CAACC,YAAY,EAAE;EACrD;EACAG,qBAAqB,EAAGC,KAAK,IAAK;IAChCA,KAAK,CAACC,WAAW,GAAG,IAAI;EAC1B,CAAC;EACDC,qBAAqB,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;IACxCH,KAAK,CAACC,WAAW,GAAG,KAAK;IACzBD,KAAK,CAACI,cAAc,GAAGD,MAAM,CAACE,OAAO,CAACD,cAAc;IACpDJ,KAAK,CAACM,IAAI,GAAGH,MAAM,CAACE,OAAO,CAACC,IAAI;EAClC,CAAC;EACDC,oBAAoB,EAAEA,CAACP,KAAK,EAAEG,MAAM,KAAK;IACvCH,KAAK,CAACC,WAAW,GAAG,KAAK;IACzBD,KAAK,CAACQ,KAAK,GAAGL,MAAM,CAACE,OAAO;EAC9B,CAAC;EAED;EACAI,mBAAmB,EAAGT,KAAK,IAAK;IAC9BA,KAAK,CAACU,OAAO,GAAG,IAAI;EACtB,CAAC;EACDC,mBAAmB,EAAEA,CAACX,KAAK,EAAEG,MAAM,KAAK;IACtCH,KAAK,CAACH,eAAe,GAAG,IAAI;IAC5BG,KAAK,CAACU,OAAO,GAAG,KAAK;IACrBV,KAAK,CAACY,IAAI,GAAGT,MAAM,CAACE,OAAO;EAC7B,CAAC;EACDQ,gBAAgB,EAAEA,CAACb,KAAK,EAAEG,MAAM,KAAK;IACnCH,KAAK,CAACU,OAAO,GAAG,KAAK;IACrBV,KAAK,CAACQ,KAAK,GAAGL,MAAM,CAACE,OAAO;IAC5BL,KAAK,CAACH,eAAe,GAAG,KAAK;EAC/B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}