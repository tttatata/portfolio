{"ast":null,"code":"var _jsxFileName = \"D:\\\\TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17\\\\frontend\\\\src\\\\pages\\\\UserInbox.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/* eslint-disable jsx-a11y/role-supports-aria-props */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport { useSelector } from \"react-redux\";\nimport socketIO from \"socket.io-client\";\nimport { format } from \"timeago.js\";\nimport { server } from \"../server\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\nimport { TfiGallery } from \"react-icons/tfi\";\nimport styles from \"../styles/styles\";\n// const ENDPOINT = \"https://socket-ecommerce-tu68.onrender.com/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://kltn-ecommerce-socket.onrender.com/\";\nconst socketId = socketIO(ENDPOINT, {\n  transports: [\"websocket\"]\n}); // Kết nối socket với server\n\nconst UserInbox = () => {\n  _s();\n  const {\n    user,\n    loading\n  } = useSelector(state => state.user);\n  const [conversations, setConversations] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [currentChat, setCurrentChat] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [images, setImages] = useState();\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [open, setOpen] = useState(false);\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    // Lấy tin nhắn mới\n    socketId.on(\"getMessage\", data => {\n      // Lắng nghe sự kiện getMessage\n      setArrivalMessage({\n        // Cập nhật tin nhắn mới\n        sender: data.senderId,\n        // Người gửi\n        text: data.text,\n        // Nội dung tin nhắn\n        createdAt: Date.now() // Thời gian gửi\n      });\n    });\n  }, []);\n  useEffect(() => {\n    // Kiểm tra tin nhắn mới\n    arrivalMessage && ( // Nếu có tin nhắn mới\n    currentChat === null || currentChat === void 0 ? void 0 : currentChat.members.includes(arrivalMessage.sender)) &&\n    // Và người gửi có trong cuộc trò chuyện hiện tại thì thêm vào danh sách tin nhắn mới của cuộc trò chuyện\n    setMessages(prev => [...prev, arrivalMessage]); // Thêm tin nhắn mới vào danh sách tin nhắn\n  }, [arrivalMessage, currentChat]);\n  useEffect(() => {\n    const getConversation = async () => {\n      // Lấy danh sách cuộc trò chuyện của người dùng\n      try {\n        const resonse = await axios.get(`${server}/conversation/get-all-conversation-user/${user === null || user === void 0 ? void 0 : user._id}`, {\n          withCredentials: true\n        });\n        setConversations(resonse.data.conversations); // Cập nhật danh sách cuộc trò chuyện của người dùng\n      } catch (error) {\n        // console.log(error);\n      }\n    };\n    getConversation();\n  }, [user, messages]);\n  useEffect(() => {\n    if (user) {\n      // Nếu người dùng đã đăng nhập thì thêm người dùng vào danh sách người dùng online\n      const sellerId = user === null || user === void 0 ? void 0 : user._id; // Lấy id người dùng\n      socketId.emit(\"addUser\", sellerId); // Thêm người dùng vào danh sách người dùng online\n      socketId.on(\"getUsers\", data => {\n        // Lắng nghe sự kiện getUsers\n        setOnlineUsers(data); //  Cập nhật danh sách người dùng online\n      });\n    }\n  }, [user]);\n  const onlineCheck = chat => {\n    // Kiểm tra người dùng online trong cuộc trò chuyện\n    const chatMembers = chat.members.find(member => member !== (user === null || user === void 0 ? void 0 : user._id)); // Lấy id người dùng trong cuộc trò chuyện\n    const online = onlineUsers.find(user => user.userId === chatMembers); // Kiểm tra người dùng online\n\n    return online ? true : false; // Trả về true nếu người dùng online, ngược lại trả về false\n  };\n\n  // get messages\n  useEffect(() => {\n    const getMessage = async () => {\n      // Lấy danh sách tin nhắn của cuộc trò chuyện\n      try {\n        const response = await axios.get(`${server}/message/get-all-messages/${currentChat === null || currentChat === void 0 ? void 0 : currentChat._id}` // Lấy danh sách tin nhắn theo id cuộc trò chuyện\n        );\n\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessage();\n  }, [currentChat]);\n\n  // Gửi tin nhắn\n  const sendMessageHandler = async e => {\n    e.preventDefault();\n    const message = {\n      // Tạo tin nhắn mới với nội dung và người gửi\n      sender: user._id,\n      // Người gửi\n      text: newMessage,\n      // Nội dung tin nhắn\n      conversationId: currentChat._id // Id cuộc trò chuyện của tin nhắn\n    };\n\n    const receiverId = currentChat.members.find(\n    // Lấy id người nhận tin nhắn trong cuộc trò chuyện\n    member => member !== (user === null || user === void 0 ? void 0 : user._id) // Lấy id người nhận tin nhắn trong cuộc trò chuyện hiện tại\n    );\n\n    socketId.emit(\"sendMessage\", {\n      // Gửi tin nhắn mới thông qua socket với người nhận\n      senderId: user === null || user === void 0 ? void 0 : user._id,\n      // Người gửi tin nhắn mới là người dùng hiện tại\n      receiverId,\n      // Người nhận tin nhắn mới là người nhận trong cuộc trò chuyện\n      text: newMessage // Nội dung tin nhắn mới là nội dung tin nhắn\n    });\n\n    try {\n      if (newMessage !== \"\") {\n        // Nếu nội dung tin nhắn không rỗng thì gửi tin nhắn\n        await axios.post(`${server}/message/create-new-message`, message) // Gửi tin nhắn mới thông qua api\n        .then(res => {\n          setMessages([...messages, res.data.message]); // Thêm tin nhắn mới vào danh sách tin nhắn của cuộc trò chuyện\n          updateLastMessage(); // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateLastMessage = async () => {\n    // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi tin nhắn\n    socketId.emit(\"updateLastMessage\", {\n      lastMessage: newMessage,\n      // Tin nhắn cuối cùng là tin nhắn mới gửi\n      lastMessageId: user._id // Id người gửi tin nhắn cuối cùng\n    });\n\n    await axios.put(`${server}/conversation/update-last-message/${currentChat._id}`, {\n      // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện thông qua api\n      lastMessage: newMessage,\n      // Tin nhắn cuối cùng là tin nhắn mới gửi\n      lastMessageId: user._id // Id người gửi tin nhắn cuối cùng\n    }).then(res => {\n      setNewMessage(\"\"); // Xóa nội dung tin nhắn sau khi gửi\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleImageUpload = async e => {\n    // Xử lý upload ảnh trong tin nhắn\n    const reader = new FileReader(); // Đọc file ảnh từ máy người dùng\n\n    reader.onload = () => {\n      // Khi đọc file ảnh thành công thì thực hiện\n      if (reader.readyState === 2) {\n        // Nếu file ảnh đã được đọc thành công\n        setImages(reader.result); // Cập nhật ảnh vào state images để hiển thị\n        imageSendingHandler(reader.result); // Gửi ảnh thông qua hàm imageSendingHandler để lưu vào database\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]); // Đọc file ảnh từ máy người dùng khi người dùng chọn file ảnh\n  };\n\n  const imageSendingHandler = async e => {\n    // Gửi ảnh trong tin nhắn mới\n    const receiverId = currentChat.members.find(\n    // Lấy id người nhận tin nhắn trong cuộc trò chuyện\n    member => member !== user._id);\n    socketId.emit(\"sendMessage\", {\n      // Gửi tin nhắn mới thông qua socket với người nhận\n      senderId: user._id,\n      // Người gửi tin nhắn mới là người dùng hiện tại\n      receiverId,\n      images: e\n    });\n    try {\n      await axios.post(`${server}/message/create-new-message`, {\n        images: e,\n        sender: user._id,\n        text: newMessage,\n        conversationId: currentChat._id\n      }).then(res => {\n        setImages();\n        setMessages([...messages, res.data.message]);\n        updateLastMessageForImage(); // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi ảnh\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const updateLastMessageForImage = async () => {\n    // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi ảnh\n    await axios.put(`${server}/conversation/update-last-message/${currentChat._id}`, {\n      lastMessage: \"Photo\",\n      // Tin nhắn cuối cùng là ảnh\n      lastMessageId: user._id\n    });\n  };\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      beahaviour: \"smooth\"\n    }); // Cuộn xuống cuối danh sách tin nhắn khi có tin nhắn mới\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [!open && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center text-[30px] py-3 font-Poppins\",\n        children: \"Tin nh\\u1EAFn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), conversations && conversations.map((item, index // Hiển thị danh sách cuộc trò chuyện\n      ) => /*#__PURE__*/_jsxDEV(MessageList, {\n        data: item,\n        index: index,\n        setOpen: setOpen,\n        setCurrentChat: setCurrentChat,\n        me: user === null || user === void 0 ? void 0 : user._id,\n        setUserData: setUserData,\n        userData: userData,\n        online: onlineCheck(item),\n        setActiveStatus: setActiveStatus,\n        loading: loading\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true), open && /*#__PURE__*/_jsxDEV(SellerInbox, {\n      setOpen: setOpen,\n      newMessage: newMessage,\n      setNewMessage: setNewMessage,\n      sendMessageHandler: sendMessageHandler,\n      messages: messages,\n      sellerId: user._id,\n      userData: userData,\n      activeStatus: activeStatus,\n      scrollRef: scrollRef,\n      handleImageUpload: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInbox, \"r9fm7u4YwzxhJf6BP2C9gOFn0sU=\", false, function () {\n  return [useSelector];\n});\n_c = UserInbox;\nconst MessageList = _ref => {\n  _s2();\n  var _user$avatar;\n  let {\n    // Hiển thị danh sách cuộc trò chuyện của người dùng với người bán\n    data,\n    index,\n    setOpen,\n    setCurrentChat,\n    me,\n    setUserData,\n    userData,\n    online,\n    setActiveStatus,\n    loading\n  } = _ref;\n  const [active, setActive] = useState(0);\n  const [user, setUser] = useState([]);\n  const navigate = useNavigate();\n  const handleClick = id => {\n    navigate(`/inbox?${id}`);\n    setOpen(true);\n  };\n  useEffect(() => {\n    setActiveStatus(online);\n    const userId = data.members.find(user => user !== me); // Lấy id người bán trong cuộc trò chuyện\n    const getUser = async () => {\n      try {\n        const res = await axios.get(`${server}/shop/get-shop-info/${userId}`); // Lấy thông tin người bán thông qua id\n        setUser(res.data.shop);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUser();\n  }, [me, data, setActiveStatus, online]); // Lấy thông tin người bán khi cuộc trò chuyện thay đổi\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full flex p-3 px-3 ${active === index ? \"bg-[#00000010]\" : \"bg-transparent\"}  cursor-pointer`,\n    onClick: e => setActive(index) || handleClick(data._id) || setCurrentChat(data) || setUserData(user) || setActiveStatus(online),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.url}`,\n        alt: \"\",\n        className: \"w-[50px] h-[50px] rounded-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), online ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[12px] h-[12px] bg-green-400 rounded-full absolute top-[2px] right-[2px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[12px] h-[12px] bg-[#c7b9b9] rounded-full absolute top-[2px] right-[2px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pl-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[18px]\",\n        children: user === null || user === void 0 ? void 0 : user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-[16px] text-[#000c]\",\n        children: [!loading && (data === null || data === void 0 ? void 0 : data.lastMessageId) !== (userData === null || userData === void 0 ? void 0 : userData._id) ? \"You:\" : (userData === null || userData === void 0 ? void 0 : userData.name.split(\" \")[0]) + \": \", \" \", data === null || data === void 0 ? void 0 : data.lastMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s2(MessageList, \"oNKbVmQW6fm9egrbuRNHgFuXceA=\", false, function () {\n  return [useNavigate];\n});\n_c2 = MessageList;\nconst SellerInbox = _ref2 => {\n  var _userData$avatar;\n  let {\n    // Hiển thị cuộc trò chuyện giữa người dùng và người bán hàng\n    setOpen,\n    newMessage,\n    setNewMessage,\n    sendMessageHandler,\n    messages,\n    sellerId,\n    userData,\n    activeStatus,\n    scrollRef,\n    handleImageUpload\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[full] min-h-full flex flex-col justify-between p-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex p-3 items-center justify-between bg-slate-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${userData === null || userData === void 0 ? void 0 : (_userData$avatar = userData.avatar) === null || _userData$avatar === void 0 ? void 0 : _userData$avatar.url}`,\n          alt: \"\",\n          className: \"w-[60px] h-[60px] rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-[18px] font-[600]\",\n            children: userData === null || userData === void 0 ? void 0 : userData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: activeStatus ? \"Active Now\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineArrowRight, {\n        size: 20,\n        className: \"cursor-pointer\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 h-[75vh] py-3 overflow-y-scroll\",\n      children: messages &&\n      // Hiển thị danh sách tin nhắn giữa người dùng và người bán hàng\n      messages.map((item, index) => {\n        var _userData$avatar2, _item$images;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex w-full my-2 ${item.sender === sellerId ? \"justify-end\" : \"justify-start\"}`,\n          ref: scrollRef,\n          children: [item.sender !== sellerId &&\n          /*#__PURE__*/\n          // Hiển thị tin nhắn của người dùng với người bán\n          _jsxDEV(\"img\", {\n            src: `${userData === null || userData === void 0 ? void 0 : (_userData$avatar2 = userData.avatar) === null || _userData$avatar2 === void 0 ? void 0 : _userData$avatar2.url}`,\n            className: \"w-[40px] h-[40px] rounded-full mr-3\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this), item.images &&\n          /*#__PURE__*/\n          // eslint-disable-next-line jsx-a11y/alt-text\n          _jsxDEV(\"img\", {\n            src: `${(_item$images = item.images) === null || _item$images === void 0 ? void 0 : _item$images.url}`,\n            className: \"w-[300px] h-[300px] object-cover rounded-[10px] ml-2 mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), item.text !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-max p-2 rounded ${item.sender === sellerId ? \"bg-[#000]\" : \"bg-[#38c776]\"} text-[#fff] h-min`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-[12px] text-[#000000d3] pt-1\",\n              children: format(item.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      \"aria-required\": true,\n      className: \"p-3 relative w-full flex justify-between items-center\",\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[30px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"\",\n          id: \"image\",\n          className: \"hidden\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: /*#__PURE__*/_jsxDEV(TfiGallery, {\n            className: \"cursor-pointer\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Enter your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          className: `${styles.input}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\",\n          className: \"hidden\",\n          id: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"send\",\n          children: /*#__PURE__*/_jsxDEV(AiOutlineSend, {\n            size: 20,\n            className: \"absolute right-4 top-5 cursor-pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_c3 = SellerInbox;\nexport default UserInbox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserInbox\");\n$RefreshReg$(_c2, \"MessageList\");\n$RefreshReg$(_c3, \"SellerInbox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Header","useSelector","socketIO","format","server","axios","useNavigate","AiOutlineArrowRight","AiOutlineSend","TfiGallery","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ENDPOINT","socketId","transports","UserInbox","_s","user","loading","state","conversations","setConversations","arrivalMessage","setArrivalMessage","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","userData","setUserData","onlineUsers","setOnlineUsers","images","setImages","activeStatus","setActiveStatus","open","setOpen","scrollRef","on","data","sender","senderId","text","createdAt","Date","now","members","includes","prev","getConversation","resonse","get","_id","withCredentials","error","sellerId","emit","onlineCheck","chat","chatMembers","find","member","online","userId","getMessage","response","console","log","sendMessageHandler","e","preventDefault","message","conversationId","receiverId","post","then","res","updateLastMessage","catch","lastMessage","lastMessageId","put","handleImageUpload","reader","FileReader","onload","readyState","result","imageSendingHandler","readAsDataURL","target","files","updateLastMessageForImage","_scrollRef$current","current","scrollIntoView","beahaviour","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","MessageList","me","SellerInbox","_c","_ref","_s2","_user$avatar","active","setActive","setUser","navigate","handleClick","id","getUser","shop","onClick","src","avatar","url","alt","name","split","_c2","_ref2","_userData$avatar","size","_userData$avatar2","_item$images","ref","onSubmit","type","onChange","htmlFor","required","placeholder","value","input","_c3","$RefreshReg$"],"sources":["D:/TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17/frontend/src/pages/UserInbox.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/role-supports-aria-props */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport { useSelector } from \"react-redux\";\nimport socketIO from \"socket.io-client\";\nimport { format } from \"timeago.js\";\nimport { server } from \"../server\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AiOutlineArrowRight, AiOutlineSend } from \"react-icons/ai\";\nimport { TfiGallery } from \"react-icons/tfi\";\nimport styles from \"../styles/styles\";\n// const ENDPOINT = \"https://socket-ecommerce-tu68.onrender.com/\";\nconst ENDPOINT = \"https://kltn-ecommerce-socket.onrender.com/\";\nconst socketId = socketIO(ENDPOINT, { transports: [\"websocket\"] }); // Kết nối socket với server\n\nconst UserInbox = () => {\n  const { user, loading } = useSelector((state) => state.user);\n\n  const [conversations, setConversations] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [currentChat, setCurrentChat] = useState();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [userData, setUserData] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [images, setImages] = useState();\n  const [activeStatus, setActiveStatus] = useState(false);\n  const [open, setOpen] = useState(false);\n  const scrollRef = useRef(null);\n\n  useEffect(() => {\n    // Lấy tin nhắn mới\n    socketId.on(\"getMessage\", (data) => {\n      // Lắng nghe sự kiện getMessage\n      setArrivalMessage({\n        // Cập nhật tin nhắn mới\n        sender: data.senderId, // Người gửi\n        text: data.text, // Nội dung tin nhắn\n        createdAt: Date.now(), // Thời gian gửi\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    // Kiểm tra tin nhắn mới\n    arrivalMessage && // Nếu có tin nhắn mới\n      currentChat?.members.includes(arrivalMessage.sender) &&\n      // Và người gửi có trong cuộc trò chuyện hiện tại thì thêm vào danh sách tin nhắn mới của cuộc trò chuyện\n      setMessages((prev) => [...prev, arrivalMessage]); // Thêm tin nhắn mới vào danh sách tin nhắn\n  }, [arrivalMessage, currentChat]);\n\n  useEffect(() => {\n    const getConversation = async () => {\n      // Lấy danh sách cuộc trò chuyện của người dùng\n      try {\n        const resonse = await axios.get(\n          `${server}/conversation/get-all-conversation-user/${user?._id}`,\n          {\n            withCredentials: true,\n          }\n        );\n\n        setConversations(resonse.data.conversations); // Cập nhật danh sách cuộc trò chuyện của người dùng\n      } catch (error) {\n        // console.log(error);\n      }\n    };\n    getConversation();\n  }, [user, messages]);\n\n  useEffect(() => {\n    if (user) {\n      // Nếu người dùng đã đăng nhập thì thêm người dùng vào danh sách người dùng online\n      const sellerId = user?._id; // Lấy id người dùng\n      socketId.emit(\"addUser\", sellerId); // Thêm người dùng vào danh sách người dùng online\n      socketId.on(\"getUsers\", (data) => {\n        // Lắng nghe sự kiện getUsers\n        setOnlineUsers(data); //  Cập nhật danh sách người dùng online\n      });\n    }\n  }, [user]);\n\n  const onlineCheck = (chat) => {\n    // Kiểm tra người dùng online trong cuộc trò chuyện\n    const chatMembers = chat.members.find((member) => member !== user?._id); // Lấy id người dùng trong cuộc trò chuyện\n    const online = onlineUsers.find((user) => user.userId === chatMembers); // Kiểm tra người dùng online\n\n    return online ? true : false; // Trả về true nếu người dùng online, ngược lại trả về false\n  };\n\n  // get messages\n  useEffect(() => {\n    const getMessage = async () => {\n      // Lấy danh sách tin nhắn của cuộc trò chuyện\n      try {\n        const response = await axios.get(\n          `${server}/message/get-all-messages/${currentChat?._id}` // Lấy danh sách tin nhắn theo id cuộc trò chuyện\n        );\n        setMessages(response.data.messages);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMessage();\n  }, [currentChat]);\n\n  // Gửi tin nhắn\n  const sendMessageHandler = async (e) => {\n    e.preventDefault();\n\n    const message = {\n      // Tạo tin nhắn mới với nội dung và người gửi\n      sender: user._id, // Người gửi\n      text: newMessage, // Nội dung tin nhắn\n      conversationId: currentChat._id, // Id cuộc trò chuyện của tin nhắn\n    };\n    const receiverId = currentChat.members.find(\n      // Lấy id người nhận tin nhắn trong cuộc trò chuyện\n      (member) => member !== user?._id // Lấy id người nhận tin nhắn trong cuộc trò chuyện hiện tại\n    );\n\n    socketId.emit(\"sendMessage\", {\n      // Gửi tin nhắn mới thông qua socket với người nhận\n      senderId: user?._id, // Người gửi tin nhắn mới là người dùng hiện tại\n      receiverId, // Người nhận tin nhắn mới là người nhận trong cuộc trò chuyện\n      text: newMessage, // Nội dung tin nhắn mới là nội dung tin nhắn\n    });\n\n    try {\n      if (newMessage !== \"\") {\n        // Nếu nội dung tin nhắn không rỗng thì gửi tin nhắn\n        await axios\n          .post(`${server}/message/create-new-message`, message) // Gửi tin nhắn mới thông qua api\n          .then((res) => {\n            setMessages([...messages, res.data.message]); // Thêm tin nhắn mới vào danh sách tin nhắn của cuộc trò chuyện\n            updateLastMessage(); // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateLastMessage = async () => {\n    // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi tin nhắn\n    socketId.emit(\"updateLastMessage\", {\n      lastMessage: newMessage, // Tin nhắn cuối cùng là tin nhắn mới gửi\n      lastMessageId: user._id, // Id người gửi tin nhắn cuối cùng\n    });\n\n    await axios\n      .put(`${server}/conversation/update-last-message/${currentChat._id}`, {\n        // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện thông qua api\n        lastMessage: newMessage, // Tin nhắn cuối cùng là tin nhắn mới gửi\n        lastMessageId: user._id, // Id người gửi tin nhắn cuối cùng\n      })\n      .then((res) => {\n        setNewMessage(\"\"); // Xóa nội dung tin nhắn sau khi gửi\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleImageUpload = async (e) => {\n    // Xử lý upload ảnh trong tin nhắn\n    const reader = new FileReader(); // Đọc file ảnh từ máy người dùng\n\n    reader.onload = () => {\n      // Khi đọc file ảnh thành công thì thực hiện\n      if (reader.readyState === 2) {\n        // Nếu file ảnh đã được đọc thành công\n        setImages(reader.result); // Cập nhật ảnh vào state images để hiển thị\n        imageSendingHandler(reader.result); // Gửi ảnh thông qua hàm imageSendingHandler để lưu vào database\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]); // Đọc file ảnh từ máy người dùng khi người dùng chọn file ảnh\n  };\n\n  const imageSendingHandler = async (e) => {\n    // Gửi ảnh trong tin nhắn mới\n    const receiverId = currentChat.members.find(\n      // Lấy id người nhận tin nhắn trong cuộc trò chuyện\n      (member) => member !== user._id\n    );\n\n    socketId.emit(\"sendMessage\", {\n      // Gửi tin nhắn mới thông qua socket với người nhận\n      senderId: user._id, // Người gửi tin nhắn mới là người dùng hiện tại\n      receiverId,\n      images: e,\n    });\n\n    try {\n      await axios\n        .post(`${server}/message/create-new-message`, {\n          images: e,\n          sender: user._id,\n          text: newMessage,\n          conversationId: currentChat._id,\n        })\n        .then((res) => {\n          setImages();\n          setMessages([...messages, res.data.message]);\n          updateLastMessageForImage(); // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi ảnh\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateLastMessageForImage = async () => {\n    // Cập nhật tin nhắn cuối cùng của cuộc trò chuyện khi gửi ảnh\n    await axios.put(\n      `${server}/conversation/update-last-message/${currentChat._id}`,\n      {\n        lastMessage: \"Photo\", // Tin nhắn cuối cùng là ảnh\n        lastMessageId: user._id,\n      }\n    );\n  };\n\n  useEffect(() => {\n    scrollRef.current?.scrollIntoView({ beahaviour: \"smooth\" }); // Cuộn xuống cuối danh sách tin nhắn khi có tin nhắn mới\n  }, [messages]);\n\n  return (\n    <div className=\"w-full\">\n      {!open && (\n        <>\n          <Header />\n          <h1 className=\"text-center text-[30px] py-3 font-Poppins\">\n            Tin nhắn\n          </h1>\n\n          {conversations &&\n            conversations.map(\n              (\n                item,\n                index // Hiển thị danh sách cuộc trò chuyện\n              ) => (\n                <MessageList\n                  data={item}\n                  key={index}\n                  index={index}\n                  setOpen={setOpen}\n                  setCurrentChat={setCurrentChat}\n                  me={user?._id}\n                  setUserData={setUserData}\n                  userData={userData}\n                  online={onlineCheck(item)}\n                  setActiveStatus={setActiveStatus}\n                  loading={loading}\n                />\n              )\n            )}\n        </>\n      )}\n\n      {open && (\n        <SellerInbox\n          setOpen={setOpen}\n          newMessage={newMessage}\n          setNewMessage={setNewMessage}\n          sendMessageHandler={sendMessageHandler}\n          messages={messages}\n          sellerId={user._id}\n          userData={userData}\n          activeStatus={activeStatus}\n          scrollRef={scrollRef}\n          handleImageUpload={handleImageUpload}\n        />\n      )}\n    </div>\n  );\n};\n\nconst MessageList = ({\n  // Hiển thị danh sách cuộc trò chuyện của người dùng với người bán\n  data,\n  index,\n  setOpen,\n  setCurrentChat,\n  me,\n  setUserData,\n  userData,\n  online,\n  setActiveStatus,\n  loading,\n}) => {\n  const [active, setActive] = useState(0);\n  const [user, setUser] = useState([]);\n  const navigate = useNavigate();\n  const handleClick = (id) => {\n    navigate(`/inbox?${id}`);\n    setOpen(true);\n  };\n\n  useEffect(() => {\n    setActiveStatus(online);\n    const userId = data.members.find((user) => user !== me); // Lấy id người bán trong cuộc trò chuyện\n    const getUser = async () => {\n      try {\n        const res = await axios.get(`${server}/shop/get-shop-info/${userId}`); // Lấy thông tin người bán thông qua id\n        setUser(res.data.shop);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUser();\n  }, [me, data, setActiveStatus, online]); // Lấy thông tin người bán khi cuộc trò chuyện thay đổi\n\n  return (\n    <div\n      className={`w-full flex p-3 px-3 ${\n        active === index ? \"bg-[#00000010]\" : \"bg-transparent\"\n      }  cursor-pointer`}\n      onClick={(e) =>\n        setActive(index) ||\n        handleClick(data._id) ||\n        setCurrentChat(data) ||\n        setUserData(user) ||\n        setActiveStatus(online)\n      }\n    >\n      <div className=\"relative\">\n        <img\n          src={`${user?.avatar?.url}`}\n          alt=\"\"\n          className=\"w-[50px] h-[50px] rounded-full\"\n        />\n        {online ? (\n          <div className=\"w-[12px] h-[12px] bg-green-400 rounded-full absolute top-[2px] right-[2px]\" />\n        ) : (\n          <div className=\"w-[12px] h-[12px] bg-[#c7b9b9] rounded-full absolute top-[2px] right-[2px]\" />\n        )}\n      </div>\n      <div className=\"pl-3\">\n        <h1 className=\"text-[18px]\">{user?.name}</h1>\n        <p className=\"text-[16px] text-[#000c]\">\n          {!loading && data?.lastMessageId !== userData?._id\n            ? \"You:\"\n            : userData?.name.split(\" \")[0] + \": \"}{\" \"}\n          {data?.lastMessage}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst SellerInbox = ({\n  // Hiển thị cuộc trò chuyện giữa người dùng và người bán hàng\n  setOpen,\n  newMessage,\n  setNewMessage,\n  sendMessageHandler,\n  messages,\n  sellerId,\n  userData,\n  activeStatus,\n  scrollRef,\n  handleImageUpload,\n}) => {\n  return (\n    <div className=\"w-[full] min-h-full flex flex-col justify-between p-5\">\n      <div className=\"w-full flex p-3 items-center justify-between bg-slate-200\">\n        <div className=\"flex\">\n          <img\n            src={`${userData?.avatar?.url}`}\n            alt=\"\"\n            className=\"w-[60px] h-[60px] rounded-full\"\n          />\n          <div className=\"pl-3\">\n            <h1 className=\"text-[18px] font-[600]\">{userData?.name}</h1>\n            <h1>{activeStatus ? \"Active Now\" : \"\"}</h1>\n          </div>\n        </div>\n        <AiOutlineArrowRight\n          size={20}\n          className=\"cursor-pointer\"\n          onClick={() => setOpen(false)}\n        />\n      </div>\n      <div className=\"px-3 h-[75vh] py-3 overflow-y-scroll\">\n        {messages && // Hiển thị danh sách tin nhắn giữa người dùng và người bán hàng\n          messages.map((item, index) => (\n            <div\n              className={`flex w-full my-2 ${\n                item.sender === sellerId ? \"justify-end\" : \"justify-start\"\n              }`}\n              ref={scrollRef}\n            >\n              {item.sender !== sellerId && ( // Hiển thị tin nhắn của người dùng với người bán\n                <img\n                  src={`${userData?.avatar?.url}`}\n                  className=\"w-[40px] h-[40px] rounded-full mr-3\"\n                  alt=\"\"\n                />\n              )}\n              {item.images && (\n                // eslint-disable-next-line jsx-a11y/alt-text\n                <img\n                  src={`${item.images?.url}`}\n                  className=\"w-[300px] h-[300px] object-cover rounded-[10px] ml-2 mb-2\"\n                />\n              )}\n              {item.text !== \"\" && (\n                <div>\n                  <div\n                    className={`w-max p-2 rounded ${\n                      item.sender === sellerId ? \"bg-[#000]\" : \"bg-[#38c776]\"\n                    } text-[#fff] h-min`}\n                  >\n                    <p>{item.text}</p>\n                  </div>\n\n                  <p className=\"text-[12px] text-[#000000d3] pt-1\">\n                    {format(item.createdAt)}\n                  </p>\n                </div>\n              )}\n            </div>\n          ))}\n      </div>\n      <form\n        aria-required={true}\n        className=\"p-3 relative w-full flex justify-between items-center\"\n        onSubmit={sendMessageHandler}\n      >\n        <div className=\"w-[30px]\">\n          <input\n            type=\"file\"\n            name=\"\"\n            id=\"image\"\n            className=\"hidden\"\n            onChange={handleImageUpload}\n          />\n          <label htmlFor=\"image\">\n            <TfiGallery className=\"cursor-pointer\" size={20} />\n          </label>\n        </div>\n        <div className=\"w-full\">\n          <input\n            type=\"text\"\n            required\n            placeholder=\"Enter your message...\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            className={`${styles.input}`}\n          />\n          <input type=\"submit\" value=\"Send\" className=\"hidden\" id=\"send\" />\n          <label htmlFor=\"send\">\n            <AiOutlineSend\n              size={20}\n              className=\"absolute right-4 top-5 cursor-pointer\"\n            />\n          </label>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UserInbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}