{"ast":null,"code":"\"use client\";\n\nimport { useSnippet } from \"./chunk-E6UNCQPZ.mjs\";\n\n// src/snippet.tsx\nimport { useCallback, useMemo, cloneElement } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Tooltip } from \"@nextui-org/tooltip\";\nimport { CopyLinearIcon, CheckLinearIcon } from \"@nextui-org/shared-icons\";\nimport { Button } from \"@nextui-org/button\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Snippet = forwardRef((props, ref) => {\n  const {\n    Component,\n    domRef,\n    preRef,\n    children,\n    slots,\n    classNames,\n    copied,\n    copyIcon = /* @__PURE__ */jsx(CopyLinearIcon, {}),\n    checkIcon = /* @__PURE__ */jsx(CheckLinearIcon, {}),\n    symbolBefore,\n    disableCopy,\n    disableTooltip,\n    hideSymbol,\n    hideCopyButton,\n    tooltipProps,\n    isMultiLine,\n    onCopy,\n    getSnippetProps,\n    getCopyButtonProps\n  } = useSnippet({\n    ...props,\n    ref\n  });\n  const TooltipContent = useCallback(_ref => {\n    let {\n      children: children2\n    } = _ref;\n    return /* @__PURE__ */jsx(Tooltip, {\n      ...tooltipProps,\n      isDisabled: copied || tooltipProps.isDisabled,\n      children: children2\n    });\n  }, [...Object.values(tooltipProps)]);\n  const contents = useMemo(() => {\n    if (hideCopyButton) {\n      return null;\n    }\n    const clonedCheckIcon = checkIcon && cloneElement(checkIcon, {\n      className: slots.checkIcon()\n    });\n    const clonedCopyIcon = copyIcon && cloneElement(copyIcon, {\n      className: slots.copyIcon()\n    });\n    const copyButton = /* @__PURE__ */jsxs(Button, {\n      ...getCopyButtonProps(),\n      children: [clonedCheckIcon, clonedCopyIcon]\n    });\n    if (disableTooltip) {\n      return copyButton;\n    }\n    return /* @__PURE__ */jsx(TooltipContent, {\n      children: copyButton\n    });\n  }, [slots, classNames == null ? void 0 : classNames.copyButton, copied, checkIcon, copyIcon, onCopy, TooltipContent, disableCopy, disableTooltip, hideCopyButton]);\n  const preContent = useMemo(() => {\n    if (isMultiLine && children && Array.isArray(children)) {\n      return /* @__PURE__ */jsx(\"div\", {\n        className: slots.content({\n          class: classNames == null ? void 0 : classNames.content\n        }),\n        children: children.map((t, index) => /* @__PURE__ */jsxs(\"pre\", {\n          className: slots.pre({\n            class: classNames == null ? void 0 : classNames.pre\n          }),\n          children: [!hideSymbol && /* @__PURE__ */jsx(\"span\", {\n            className: slots.symbol({\n              class: classNames == null ? void 0 : classNames.symbol\n            }),\n            children: symbolBefore\n          }), t]\n        }, `${index}-${t}`))\n      });\n    }\n    return /* @__PURE__ */jsxs(\"pre\", {\n      ref: preRef,\n      className: slots.pre({\n        class: classNames == null ? void 0 : classNames.pre\n      }),\n      children: [!hideSymbol && /* @__PURE__ */jsx(\"span\", {\n        className: slots.symbol({\n          class: classNames == null ? void 0 : classNames.symbol\n        }),\n        children: symbolBefore\n      }), children]\n    });\n  }, [children, hideSymbol, isMultiLine, symbolBefore, classNames == null ? void 0 : classNames.pre, slots]);\n  return /* @__PURE__ */jsxs(Component, {\n    ref: domRef,\n    ...getSnippetProps(),\n    children: [preContent, contents]\n  });\n});\nSnippet.displayName = \"NextUI.Snippet\";\nvar snippet_default = Snippet;\nexport { snippet_default };","map":{"version":3,"names":["useSnippet","useCallback","useMemo","cloneElement","forwardRef","Tooltip","CopyLinearIcon","CheckLinearIcon","Button","jsx","jsxs","Snippet","props","ref","Component","domRef","preRef","children","slots","classNames","copied","copyIcon","checkIcon","symbolBefore","disableCopy","disableTooltip","hideSymbol","hideCopyButton","tooltipProps","isMultiLine","onCopy","getSnippetProps","getCopyButtonProps","TooltipContent","_ref","children2","isDisabled","Object","values","contents","clonedCheckIcon","className","clonedCopyIcon","copyButton","preContent","Array","isArray","content","class","map","t","index","pre","symbol","displayName","snippet_default"],"sources":["D:/TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17/frontend/node_modules/@nextui-org/snippet/dist/chunk-DMESSLTO.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useSnippet\n} from \"./chunk-E6UNCQPZ.mjs\";\n\n// src/snippet.tsx\nimport { useCallback, useMemo, cloneElement } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Tooltip } from \"@nextui-org/tooltip\";\nimport { CopyLinearIcon, CheckLinearIcon } from \"@nextui-org/shared-icons\";\nimport { Button } from \"@nextui-org/button\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Snippet = forwardRef((props, ref) => {\n  const {\n    Component,\n    domRef,\n    preRef,\n    children,\n    slots,\n    classNames,\n    copied,\n    copyIcon = /* @__PURE__ */ jsx(CopyLinearIcon, {}),\n    checkIcon = /* @__PURE__ */ jsx(CheckLinearIcon, {}),\n    symbolBefore,\n    disableCopy,\n    disableTooltip,\n    hideSymbol,\n    hideCopyButton,\n    tooltipProps,\n    isMultiLine,\n    onCopy,\n    getSnippetProps,\n    getCopyButtonProps\n  } = useSnippet({ ...props, ref });\n  const TooltipContent = useCallback(\n    ({ children: children2 }) => /* @__PURE__ */ jsx(Tooltip, { ...tooltipProps, isDisabled: copied || tooltipProps.isDisabled, children: children2 }),\n    [...Object.values(tooltipProps)]\n  );\n  const contents = useMemo(() => {\n    if (hideCopyButton) {\n      return null;\n    }\n    const clonedCheckIcon = checkIcon && cloneElement(checkIcon, { className: slots.checkIcon() });\n    const clonedCopyIcon = copyIcon && cloneElement(copyIcon, { className: slots.copyIcon() });\n    const copyButton = /* @__PURE__ */ jsxs(Button, { ...getCopyButtonProps(), children: [\n      clonedCheckIcon,\n      clonedCopyIcon\n    ] });\n    if (disableTooltip) {\n      return copyButton;\n    }\n    return /* @__PURE__ */ jsx(TooltipContent, { children: copyButton });\n  }, [\n    slots,\n    classNames == null ? void 0 : classNames.copyButton,\n    copied,\n    checkIcon,\n    copyIcon,\n    onCopy,\n    TooltipContent,\n    disableCopy,\n    disableTooltip,\n    hideCopyButton\n  ]);\n  const preContent = useMemo(() => {\n    if (isMultiLine && children && Array.isArray(children)) {\n      return /* @__PURE__ */ jsx(\"div\", { className: slots.content({ class: classNames == null ? void 0 : classNames.content }), children: children.map((t, index) => /* @__PURE__ */ jsxs(\"pre\", { className: slots.pre({ class: classNames == null ? void 0 : classNames.pre }), children: [\n        !hideSymbol && /* @__PURE__ */ jsx(\"span\", { className: slots.symbol({ class: classNames == null ? void 0 : classNames.symbol }), children: symbolBefore }),\n        t\n      ] }, `${index}-${t}`)) });\n    }\n    return /* @__PURE__ */ jsxs(\"pre\", { ref: preRef, className: slots.pre({ class: classNames == null ? void 0 : classNames.pre }), children: [\n      !hideSymbol && /* @__PURE__ */ jsx(\"span\", { className: slots.symbol({ class: classNames == null ? void 0 : classNames.symbol }), children: symbolBefore }),\n      children\n    ] });\n  }, [children, hideSymbol, isMultiLine, symbolBefore, classNames == null ? void 0 : classNames.pre, slots]);\n  return /* @__PURE__ */ jsxs(Component, { ref: domRef, ...getSnippetProps(), children: [\n    preContent,\n    contents\n  ] });\n});\nSnippet.displayName = \"NextUI.Snippet\";\nvar snippet_default = Snippet;\n\nexport {\n  snippet_default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}