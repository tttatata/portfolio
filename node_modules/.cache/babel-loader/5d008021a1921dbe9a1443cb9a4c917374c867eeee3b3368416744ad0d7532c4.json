{"ast":null,"code":"import $02cb4c75c506befe$exports from \"./ar-AE.mjs\";\nimport $568b8163f1e56faf$exports from \"./bg-BG.mjs\";\nimport $87581c0202d106b8$exports from \"./cs-CZ.mjs\";\nimport $a10a0369f5433ed1$exports from \"./da-DK.mjs\";\nimport $bfd288727d5cb166$exports from \"./de-DE.mjs\";\nimport $ca177778f9a74e3c$exports from \"./el-GR.mjs\";\nimport $9b5aa79ef84beb6c$exports from \"./en-US.mjs\";\nimport $57968e8209de2557$exports from \"./es-ES.mjs\";\nimport $60690790bf4c1c6a$exports from \"./et-EE.mjs\";\nimport $1101246e8c7d9357$exports from \"./fi-FI.mjs\";\nimport $6404b5cb5b241730$exports from \"./fr-FR.mjs\";\nimport $dfeafa702e92e31f$exports from \"./he-IL.mjs\";\nimport $2d125e0b34676352$exports from \"./hr-HR.mjs\";\nimport $ea029611d7634059$exports from \"./hu-HU.mjs\";\nimport $77f075bb86ad7091$exports from \"./it-IT.mjs\";\nimport $6e87462e84907983$exports from \"./ja-JP.mjs\";\nimport $9246f2c6edc6b232$exports from \"./ko-KR.mjs\";\nimport $e587accc6c0a434c$exports from \"./lt-LT.mjs\";\nimport $03a1900e7400b5ab$exports from \"./lv-LV.mjs\";\nimport $1387676441be6cf6$exports from \"./nb-NO.mjs\";\nimport $17e82ebf0f8ab91f$exports from \"./nl-NL.mjs\";\nimport $2f5377d3471630e5$exports from \"./pl-PL.mjs\";\nimport $dee9868b6fa95ffe$exports from \"./pt-BR.mjs\";\nimport $f8b2e63637cbb5a6$exports from \"./pt-PT.mjs\";\nimport $46a885db3b44ea95$exports from \"./ro-RO.mjs\";\nimport $50d8a8f0afa9dee5$exports from \"./ru-RU.mjs\";\nimport $2867ee6173245507$exports from \"./sk-SK.mjs\";\nimport $0631b65beeb09b50$exports from \"./sl-SI.mjs\";\nimport $65fc749265dcd686$exports from \"./sr-SP.mjs\";\nimport $69ba655c7853c08e$exports from \"./sv-SE.mjs\";\nimport $a79794784d61577c$exports from \"./tr-TR.mjs\";\nimport $c2845791417ebaf4$exports from \"./uk-UA.mjs\";\nimport $29b642d0025cc7a4$exports from \"./zh-CN.mjs\";\nimport $cd36dd33f9d46936$exports from \"./zh-TW.mjs\";\nimport { announce as $3yVy0$announce } from \"@react-aria/live-announcer\";\nimport { ariaHideOutside as $3yVy0$ariaHideOutside } from \"@react-aria/overlays\";\nimport { listData as $3yVy0$listData, getItemId as $3yVy0$getItemId } from \"@react-aria/listbox\";\nimport { useRouter as $3yVy0$useRouter, chain as $3yVy0$chain, useLabels as $3yVy0$useLabels, isAppleDevice as $3yVy0$isAppleDevice, mergeProps as $3yVy0$mergeProps } from \"@react-aria/utils\";\nimport { useMemo as $3yVy0$useMemo, useRef as $3yVy0$useRef, useEffect as $3yVy0$useEffect } from \"react\";\nimport { getChildNodes as $3yVy0$getChildNodes, getItemCount as $3yVy0$getItemCount } from \"@react-stately/collections\";\nimport { ListKeyboardDelegate as $3yVy0$ListKeyboardDelegate, useSelectableCollection as $3yVy0$useSelectableCollection } from \"@react-aria/selection\";\nimport { privateValidationStateProp as $3yVy0$privateValidationStateProp } from \"@react-stately/form\";\nimport { useLocalizedStringFormatter as $3yVy0$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useMenuTrigger as $3yVy0$useMenuTrigger } from \"@react-aria/menu\";\nimport { useTextField as $3yVy0$useTextField } from \"@react-aria/textfield\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nvar $de5926a92e8ebc5b$exports = {};\n$de5926a92e8ebc5b$exports = {\n  \"ar-AE\": $02cb4c75c506befe$exports,\n  \"bg-BG\": $568b8163f1e56faf$exports,\n  \"cs-CZ\": $87581c0202d106b8$exports,\n  \"da-DK\": $a10a0369f5433ed1$exports,\n  \"de-DE\": $bfd288727d5cb166$exports,\n  \"el-GR\": $ca177778f9a74e3c$exports,\n  \"en-US\": $9b5aa79ef84beb6c$exports,\n  \"es-ES\": $57968e8209de2557$exports,\n  \"et-EE\": $60690790bf4c1c6a$exports,\n  \"fi-FI\": $1101246e8c7d9357$exports,\n  \"fr-FR\": $6404b5cb5b241730$exports,\n  \"he-IL\": $dfeafa702e92e31f$exports,\n  \"hr-HR\": $2d125e0b34676352$exports,\n  \"hu-HU\": $ea029611d7634059$exports,\n  \"it-IT\": $77f075bb86ad7091$exports,\n  \"ja-JP\": $6e87462e84907983$exports,\n  \"ko-KR\": $9246f2c6edc6b232$exports,\n  \"lt-LT\": $e587accc6c0a434c$exports,\n  \"lv-LV\": $03a1900e7400b5ab$exports,\n  \"nb-NO\": $1387676441be6cf6$exports,\n  \"nl-NL\": $17e82ebf0f8ab91f$exports,\n  \"pl-PL\": $2f5377d3471630e5$exports,\n  \"pt-BR\": $dee9868b6fa95ffe$exports,\n  \"pt-PT\": $f8b2e63637cbb5a6$exports,\n  \"ro-RO\": $46a885db3b44ea95$exports,\n  \"ru-RU\": $50d8a8f0afa9dee5$exports,\n  \"sk-SK\": $2867ee6173245507$exports,\n  \"sl-SI\": $0631b65beeb09b50$exports,\n  \"sr-SP\": $65fc749265dcd686$exports,\n  \"sv-SE\": $69ba655c7853c08e$exports,\n  \"tr-TR\": $a79794784d61577c$exports,\n  \"uk-UA\": $c2845791417ebaf4$exports,\n  \"zh-CN\": $29b642d0025cc7a4$exports,\n  \"zh-TW\": $cd36dd33f9d46936$exports\n};\nfunction $c350ade66beef0af$export$8c18d1b4f7232bbf(props, state) {\n  let {\n    buttonRef: buttonRef,\n    popoverRef: popoverRef,\n    inputRef: inputRef,\n    listBoxRef: listBoxRef,\n    keyboardDelegate: keyboardDelegate,\n    shouldFocusWrap:\n    // completionMode = 'suggest',\n    shouldFocusWrap,\n    isReadOnly: isReadOnly,\n    isDisabled: isDisabled\n  } = props;\n  let stringFormatter = (0, $3yVy0$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($de5926a92e8ebc5b$exports)), \"@react-aria/combobox\");\n  let {\n    menuTriggerProps: menuTriggerProps,\n    menuProps: menuProps\n  } = (0, $3yVy0$useMenuTrigger)({\n    type: \"listbox\",\n    isDisabled: isDisabled || isReadOnly\n  }, state, buttonRef);\n  // Set listbox id so it can be used when calling getItemId later\n  (0, $3yVy0$listData).set(state, {\n    id: menuProps.id\n  });\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let delegate = (0, $3yVy0$useMemo)(() => keyboardDelegate || new (0, $3yVy0$ListKeyboardDelegate)(state.collection, state.disabledKeys, listBoxRef), [keyboardDelegate, state.collection, state.disabledKeys, listBoxRef]);\n  // Use useSelectableCollection to get the keyboard handlers to apply to the textfield\n  let {\n    collectionProps: collectionProps\n  } = (0, $3yVy0$useSelectableCollection)({\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    disallowTypeAhead: true,\n    disallowEmptySelection: true,\n    shouldFocusWrap: shouldFocusWrap,\n    ref: inputRef,\n    // Prevent item scroll behavior from being applied here, should be handled in the user's Popover + ListBox component\n    isVirtualized: true\n  });\n  let router = (0, $3yVy0$useRouter)();\n  // For textfield specific keydown operations\n  let onKeyDown = e => {\n    switch (e.key) {\n      case \"Enter\":\n      case \"Tab\":\n        // Prevent form submission if menu is open since we may be selecting a option\n        if (state.isOpen && e.key === \"Enter\") e.preventDefault();\n        // If the focused item is a link, trigger opening it. Items that are links are not selectable.\n        if (state.isOpen && state.selectionManager.focusedKey != null && state.selectionManager.isLink(state.selectionManager.focusedKey)) {\n          if (e.key === \"Enter\") {\n            let item = listBoxRef.current.querySelector(`[data-key=\"${CSS.escape(state.selectionManager.focusedKey.toString())}\"]`);\n            if (item instanceof HTMLAnchorElement) router.open(item, e);\n          }\n          state.close();\n        } else state.commit();\n        break;\n      case \"Escape\":\n        if (state.selectedKey !== null || state.inputValue === \"\" || props.allowsCustomValue) e.continuePropagation();\n        state.revert();\n        break;\n      case \"ArrowDown\":\n        state.open(\"first\", \"manual\");\n        break;\n      case \"ArrowUp\":\n        state.open(\"last\", \"manual\");\n        break;\n      case \"ArrowLeft\":\n      case \"ArrowRight\":\n        state.selectionManager.setFocusedKey(null);\n        break;\n    }\n  };\n  let onBlur = e => {\n    var _popoverRef_current;\n    // Ignore blur if focused moved to the button or into the popover.\n    if (e.relatedTarget === (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) || ((_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(e.relatedTarget))) return;\n    if (props.onBlur) props.onBlur(e);\n    state.setFocused(false);\n  };\n  let onFocus = e => {\n    if (state.isFocused) return;\n    if (props.onFocus) props.onFocus(e);\n    state.setFocused(true);\n  };\n  let {\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  } = state.displayValidation;\n  let {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = (0, $3yVy0$useTextField)({\n    ...props,\n    onChange: state.setInputValue,\n    onKeyDown: !isReadOnly ? (0, $3yVy0$chain)(state.isOpen && collectionProps.onKeyDown, onKeyDown, props.onKeyDown) : props.onKeyDown,\n    onBlur: onBlur,\n    value: state.inputValue,\n    onFocus: onFocus,\n    autoComplete: \"off\",\n    validate: undefined,\n    [(0, $3yVy0$privateValidationStateProp)]: state\n  }, inputRef);\n  // Press handlers for the ComboBox button\n  let onPress = e => {\n    if (e.pointerType === \"touch\") {\n      // Focus the input field in case it isn't focused yet\n      inputRef.current.focus();\n      state.toggle(null, \"manual\");\n    }\n  };\n  let onPressStart = e => {\n    if (e.pointerType !== \"touch\") {\n      inputRef.current.focus();\n      state.toggle(e.pointerType === \"keyboard\" || e.pointerType === \"virtual\" ? \"first\" : null, \"manual\");\n    }\n  };\n  let triggerLabelProps = (0, $3yVy0$useLabels)({\n    id: menuTriggerProps.id,\n    \"aria-label\": stringFormatter.format(\"buttonLabel\"),\n    \"aria-labelledby\": props[\"aria-labelledby\"] || labelProps.id\n  });\n  let listBoxProps = (0, $3yVy0$useLabels)({\n    id: menuProps.id,\n    \"aria-label\": stringFormatter.format(\"listboxLabel\"),\n    \"aria-labelledby\": props[\"aria-labelledby\"] || labelProps.id\n  });\n  // If a touch happens on direct center of ComboBox input, might be virtual click from iPad so open ComboBox menu\n  let lastEventTime = (0, $3yVy0$useRef)(0);\n  let onTouchEnd = e => {\n    if (isDisabled || isReadOnly) return;\n    // Sometimes VoiceOver on iOS fires two touchend events in quick succession. Ignore the second one.\n    if (e.timeStamp - lastEventTime.current < 500) {\n      e.preventDefault();\n      inputRef.current.focus();\n      return;\n    }\n    let rect = e.target.getBoundingClientRect();\n    let touch = e.changedTouches[0];\n    let centerX = Math.ceil(rect.left + .5 * rect.width);\n    let centerY = Math.ceil(rect.top + .5 * rect.height);\n    if (touch.clientX === centerX && touch.clientY === centerY) {\n      e.preventDefault();\n      inputRef.current.focus();\n      state.toggle(null, \"manual\");\n      lastEventTime.current = e.timeStamp;\n    }\n  };\n  // VoiceOver has issues with announcing aria-activedescendant properly on change\n  // (especially on iOS). We use a live region announcer to announce focus changes\n  // manually. In addition, section titles are announced when navigating into a new section.\n  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen ? state.collection.getItem(state.selectionManager.focusedKey) : undefined;\n  var _focusedItem_parentKey;\n  let sectionKey = (_focusedItem_parentKey = focusedItem === null || focusedItem === void 0 ? void 0 : focusedItem.parentKey) !== null && _focusedItem_parentKey !== void 0 ? _focusedItem_parentKey : null;\n  var _state_selectionManager_focusedKey;\n  let itemKey = (_state_selectionManager_focusedKey = state.selectionManager.focusedKey) !== null && _state_selectionManager_focusedKey !== void 0 ? _state_selectionManager_focusedKey : null;\n  let lastSection = (0, $3yVy0$useRef)(sectionKey);\n  let lastItem = (0, $3yVy0$useRef)(itemKey);\n  (0, $3yVy0$useEffect)(() => {\n    if ((0, $3yVy0$isAppleDevice)() && focusedItem != null && itemKey !== lastItem.current) {\n      let isSelected = state.selectionManager.isSelected(itemKey);\n      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;\n      let sectionTitle = (section === null || section === void 0 ? void 0 : section[\"aria-label\"]) || (typeof (section === null || section === void 0 ? void 0 : section.rendered) === \"string\" ? section.rendered : \"\") || \"\";\n      let announcement = stringFormatter.format(\"focusAnnouncement\", {\n        isGroupChange: section && sectionKey !== lastSection.current,\n        groupTitle: sectionTitle,\n        groupCount: section ? [...(0, $3yVy0$getChildNodes)(section, state.collection)].length : 0,\n        optionText: focusedItem[\"aria-label\"] || focusedItem.textValue || \"\",\n        isSelected: isSelected\n      });\n      (0, $3yVy0$announce)(announcement);\n    }\n    lastSection.current = sectionKey;\n    lastItem.current = itemKey;\n  });\n  // Announce the number of available suggestions when it changes\n  let optionCount = (0, $3yVy0$getItemCount)(state.collection);\n  let lastSize = (0, $3yVy0$useRef)(optionCount);\n  let lastOpen = (0, $3yVy0$useRef)(state.isOpen);\n  (0, $3yVy0$useEffect)(() => {\n    // Only announce the number of options available when the menu opens if there is no\n    // focused item, otherwise screen readers will typically read e.g. \"1 of 6\".\n    // The exception is VoiceOver since this isn't included in the message above.\n    let didOpenWithoutFocusedItem = state.isOpen !== lastOpen.current && (state.selectionManager.focusedKey == null || (0, $3yVy0$isAppleDevice)());\n    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {\n      let announcement = stringFormatter.format(\"countAnnouncement\", {\n        optionCount: optionCount\n      });\n      (0, $3yVy0$announce)(announcement);\n    }\n    lastSize.current = optionCount;\n    lastOpen.current = state.isOpen;\n  });\n  // Announce when a selection occurs for VoiceOver. Other screen readers typically do this automatically.\n  let lastSelectedKey = (0, $3yVy0$useRef)(state.selectedKey);\n  (0, $3yVy0$useEffect)(() => {\n    if ((0, $3yVy0$isAppleDevice)() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {\n      let optionText = state.selectedItem[\"aria-label\"] || state.selectedItem.textValue || \"\";\n      let announcement = stringFormatter.format(\"selectedAnnouncement\", {\n        optionText: optionText\n      });\n      (0, $3yVy0$announce)(announcement);\n    }\n    lastSelectedKey.current = state.selectedKey;\n  });\n  (0, $3yVy0$useEffect)(() => {\n    if (state.isOpen) return (0, $3yVy0$ariaHideOutside)([inputRef.current, popoverRef.current]);\n  }, [state.isOpen, inputRef, popoverRef]);\n  return {\n    labelProps: labelProps,\n    buttonProps: {\n      ...menuTriggerProps,\n      ...triggerLabelProps,\n      excludeFromTabOrder: true,\n      onPress: onPress,\n      onPressStart: onPressStart,\n      isDisabled: isDisabled || isReadOnly\n    },\n    inputProps: (0, $3yVy0$mergeProps)(inputProps, {\n      role: \"combobox\",\n      \"aria-expanded\": menuTriggerProps[\"aria-expanded\"],\n      \"aria-controls\": state.isOpen ? menuProps.id : undefined,\n      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)\n      \"aria-autocomplete\": \"list\",\n      \"aria-activedescendant\": focusedItem ? (0, $3yVy0$getItemId)(state, focusedItem.key) : undefined,\n      onTouchEnd: onTouchEnd,\n      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.\n      autoCorrect: \"off\",\n      // This disable's the macOS Safari spell check auto corrections.\n      spellCheck: \"false\"\n    }),\n    listBoxProps: (0, $3yVy0$mergeProps)(menuProps, listBoxProps, {\n      autoFocus: state.focusStrategy,\n      shouldUseVirtualFocus: true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      linkBehavior: \"selection\"\n    }),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    isInvalid: isInvalid,\n    validationErrors: validationErrors,\n    validationDetails: validationDetails\n  };\n}\nexport { $c350ade66beef0af$export$8c18d1b4f7232bbf as useComboBox };","map":{"version":3,"names":["$de5926a92e8ebc5b$exports","$02cb4c75c506befe$exports","$568b8163f1e56faf$exports","$87581c0202d106b8$exports","$a10a0369f5433ed1$exports","$bfd288727d5cb166$exports","$ca177778f9a74e3c$exports","$9b5aa79ef84beb6c$exports","$57968e8209de2557$exports","$60690790bf4c1c6a$exports","$1101246e8c7d9357$exports","$6404b5cb5b241730$exports","$dfeafa702e92e31f$exports","$2d125e0b34676352$exports","$ea029611d7634059$exports","$77f075bb86ad7091$exports","$6e87462e84907983$exports","$9246f2c6edc6b232$exports","$e587accc6c0a434c$exports","$03a1900e7400b5ab$exports","$1387676441be6cf6$exports","$17e82ebf0f8ab91f$exports","$2f5377d3471630e5$exports","$dee9868b6fa95ffe$exports","$f8b2e63637cbb5a6$exports","$46a885db3b44ea95$exports","$50d8a8f0afa9dee5$exports","$2867ee6173245507$exports","$0631b65beeb09b50$exports","$65fc749265dcd686$exports","$69ba655c7853c08e$exports","$a79794784d61577c$exports","$c2845791417ebaf4$exports","$29b642d0025cc7a4$exports","$cd36dd33f9d46936$exports","$c350ade66beef0af$export$8c18d1b4f7232bbf","props","state","buttonRef","popoverRef","inputRef","listBoxRef","keyboardDelegate","shouldFocusWrap","isReadOnly","isDisabled","stringFormatter","$3yVy0$useLocalizedStringFormatter","$parcel$interopDefault","menuTriggerProps","menuProps","$3yVy0$useMenuTrigger","type","$3yVy0$listData","set","id","delegate","$3yVy0$useMemo","$3yVy0$ListKeyboardDelegate","collection","disabledKeys","collectionProps","$3yVy0$useSelectableCollection","selectionManager","disallowTypeAhead","disallowEmptySelection","ref","isVirtualized","router","$3yVy0$useRouter","onKeyDown","e","key","isOpen","preventDefault","focusedKey","isLink","item","current","querySelector","CSS","escape","toString","HTMLAnchorElement","open","close","commit","selectedKey","inputValue","allowsCustomValue","continuePropagation","revert","setFocusedKey","onBlur","_popoverRef_current","relatedTarget","contains","setFocused","onFocus","isFocused","isInvalid","validationErrors","validationDetails","displayValidation","labelProps","inputProps","descriptionProps","errorMessageProps","$3yVy0$useTextField","onChange","setInputValue","$3yVy0$chain","value","autoComplete","validate","undefined","$3yVy0$privateValidationStateProp","onPress","pointerType","focus","toggle","onPressStart","triggerLabelProps","$3yVy0$useLabels","format","listBoxProps","lastEventTime","$3yVy0$useRef","onTouchEnd","timeStamp","rect","target","getBoundingClientRect","touch","changedTouches","centerX","Math","ceil","left","width","centerY","top","height","clientX","clientY","focusedItem","getItem","_focusedItem_parentKey","sectionKey","parentKey","_state_selectionManager_focusedKey","itemKey","lastSection","lastItem","$3yVy0$useEffect","$3yVy0$isAppleDevice","isSelected","section","sectionTitle","rendered","announcement","isGroupChange","groupTitle","groupCount","$3yVy0$getChildNodes","length","optionText","textValue","$3yVy0$announce","optionCount","$3yVy0$getItemCount","lastSize","lastOpen","didOpenWithoutFocusedItem","lastSelectedKey","selectedItem","$3yVy0$ariaHideOutside","buttonProps","excludeFromTabOrder","$3yVy0$mergeProps","role","$3yVy0$getItemId","autoCorrect","spellCheck","autoFocus","focusStrategy","shouldUseVirtualFocus","shouldSelectOnPressUp","shouldFocusOnHover","linkBehavior"],"sources":["D:\\TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17\\frontend\\node_modules\\@react-aria\\combobox\\dist\\packages\\@react-aria\\combobox\\src\\index.ts","D:\\TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17\\frontend\\node_modules\\@react-aria\\combobox\\dist\\packages\\@react-aria\\combobox\\src\\useComboBox.ts","D:\\TranThaiThanh_TranHuuMinhThuong_BaoCao_Nhom17\\frontend\\node_modules\\@react-aria\\combobox\\dist\\packages\\@react-aria\\combobox\\src\\*.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useComboBox} from './useComboBox';\nexport type {AriaComboBoxOptions, ComboBoxAria} from './useComboBox';\nexport type {AriaComboBoxProps} from '@react-types/combobox';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaComboBoxProps} from '@react-types/combobox';\nimport {ariaHideOutside} from '@react-aria/overlays';\nimport {AriaListBoxOptions, getItemId, listData} from '@react-aria/listbox';\nimport {BaseEvent, DOMAttributes, KeyboardDelegate, PressEvent, ValidationResult} from '@react-types/shared';\nimport {chain, isAppleDevice, mergeProps, useLabels, useRouter} from '@react-aria/utils';\nimport {ComboBoxState} from '@react-stately/combobox';\nimport {FocusEvent, InputHTMLAttributes, KeyboardEvent, RefObject, TouchEvent, useEffect, useMemo, useRef} from 'react';\nimport {getChildNodes, getItemCount} from '@react-stately/collections';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {ListKeyboardDelegate, useSelectableCollection} from '@react-aria/selection';\nimport {privateValidationStateProp} from '@react-stately/form';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMenuTrigger} from '@react-aria/menu';\nimport {useTextField} from '@react-aria/textfield';\n\nexport interface AriaComboBoxOptions<T> extends Omit<AriaComboBoxProps<T>, 'children'> {\n  /** The ref for the input element. */\n  inputRef: RefObject<HTMLInputElement>,\n  /** The ref for the list box popover. */\n  popoverRef: RefObject<Element>,\n  /** The ref for the list box. */\n  listBoxRef: RefObject<HTMLElement>,\n  /** The ref for the optional list box popup trigger button.  */\n  buttonRef?: RefObject<Element>,\n  /** An optional keyboard delegate implementation, to override the default. */\n  keyboardDelegate?: KeyboardDelegate\n}\n\nexport interface ComboBoxAria<T> extends ValidationResult {\n  /** Props for the label element. */\n  labelProps: DOMAttributes,\n  /** Props for the combo box input element. */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Props for the list box, to be passed to [useListBox](useListBox.html). */\n  listBoxProps: AriaListBoxOptions<T>,\n  /** Props for the optional trigger button, to be passed to [useButton](useButton.html). */\n  buttonProps: AriaButtonProps,\n  /** Props for the combo box description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the combo box error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a combo box component.\n * A combo box combines a text input with a listbox, allowing users to filter a list of options to items matching a query.\n * @param props - Props for the combo box.\n * @param state - State for the select, as returned by `useComboBoxState`.\n */\nexport function useComboBox<T>(props: AriaComboBoxOptions<T>, state: ComboBoxState<T>): ComboBoxAria<T> {\n  let {\n    buttonRef,\n    popoverRef,\n    inputRef,\n    listBoxRef,\n    keyboardDelegate,\n    // completionMode = 'suggest',\n    shouldFocusWrap,\n    isReadOnly,\n    isDisabled\n  } = props;\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/combobox');\n  let {menuTriggerProps, menuProps} = useMenuTrigger<T>(\n    {\n      type: 'listbox',\n      isDisabled: isDisabled || isReadOnly\n    },\n    state,\n    buttonRef\n  );\n\n  // Set listbox id so it can be used when calling getItemId later\n  listData.set(state, {id: menuProps.id});\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let delegate = useMemo(() =>\n    keyboardDelegate ||\n    new ListKeyboardDelegate(state.collection, state.disabledKeys, listBoxRef)\n  , [keyboardDelegate, state.collection, state.disabledKeys, listBoxRef]);\n\n  // Use useSelectableCollection to get the keyboard handlers to apply to the textfield\n  let {collectionProps} = useSelectableCollection({\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    disallowTypeAhead: true,\n    disallowEmptySelection: true,\n    shouldFocusWrap,\n    ref: inputRef,\n    // Prevent item scroll behavior from being applied here, should be handled in the user's Popover + ListBox component\n    isVirtualized: true\n  });\n\n  let router = useRouter();\n\n  // For textfield specific keydown operations\n  let onKeyDown = (e: BaseEvent<KeyboardEvent<any>>) => {\n    switch (e.key) {\n      case 'Enter':\n      case 'Tab':\n        // Prevent form submission if menu is open since we may be selecting a option\n        if (state.isOpen && e.key === 'Enter') {\n          e.preventDefault();\n        }\n\n        // If the focused item is a link, trigger opening it. Items that are links are not selectable.\n        if (state.isOpen && state.selectionManager.focusedKey != null && state.selectionManager.isLink(state.selectionManager.focusedKey)) {\n          if (e.key === 'Enter') {\n            let item = listBoxRef.current.querySelector(`[data-key=\"${CSS.escape(state.selectionManager.focusedKey.toString())}\"]`);\n            if (item instanceof HTMLAnchorElement) {\n              router.open(item, e);\n            }\n          }\n\n          state.close();\n        } else {\n          state.commit();\n        }\n        break;\n      case 'Escape':\n        if (\n          state.selectedKey !== null ||\n          state.inputValue === '' ||\n          props.allowsCustomValue\n        ) {\n          e.continuePropagation();\n        }\n        state.revert();\n        break;\n      case 'ArrowDown':\n        state.open('first', 'manual');\n        break;\n      case 'ArrowUp':\n        state.open('last', 'manual');\n        break;\n      case 'ArrowLeft':\n      case 'ArrowRight':\n        state.selectionManager.setFocusedKey(null);\n        break;\n    }\n  };\n\n  let onBlur = (e: FocusEvent<HTMLInputElement>) => {\n    // Ignore blur if focused moved to the button or into the popover.\n    if (e.relatedTarget === buttonRef?.current || popoverRef.current?.contains(e.relatedTarget)) {\n      return;\n    }\n\n    if (props.onBlur) {\n      props.onBlur(e);\n    }\n\n    state.setFocused(false);\n  };\n\n  let onFocus = (e: FocusEvent<HTMLInputElement>) => {\n    if (state.isFocused) {\n      return;\n    }\n\n    if (props.onFocus) {\n      props.onFocus(e);\n    }\n\n    state.setFocused(true);\n  };\n\n  let {isInvalid, validationErrors, validationDetails} = state.displayValidation;\n  let {labelProps, inputProps, descriptionProps, errorMessageProps} = useTextField({\n    ...props,\n    onChange: state.setInputValue,\n    onKeyDown: !isReadOnly ? chain(state.isOpen && collectionProps.onKeyDown, onKeyDown, props.onKeyDown) : props.onKeyDown,\n    onBlur,\n    value: state.inputValue,\n    onFocus,\n    autoComplete: 'off',\n    validate: undefined,\n    [privateValidationStateProp]: state\n  }, inputRef);\n\n  // Press handlers for the ComboBox button\n  let onPress = (e: PressEvent) => {\n    if (e.pointerType === 'touch') {\n      // Focus the input field in case it isn't focused yet\n      inputRef.current.focus();\n      state.toggle(null, 'manual');\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (e.pointerType !== 'touch') {\n      inputRef.current.focus();\n      state.toggle((e.pointerType === 'keyboard' || e.pointerType === 'virtual') ? 'first' : null, 'manual');\n    }\n  };\n\n  let triggerLabelProps = useLabels({\n    id: menuTriggerProps.id,\n    'aria-label': stringFormatter.format('buttonLabel'),\n    'aria-labelledby': props['aria-labelledby'] || labelProps.id\n  });\n\n  let listBoxProps = useLabels({\n    id: menuProps.id,\n    'aria-label': stringFormatter.format('listboxLabel'),\n    'aria-labelledby': props['aria-labelledby'] || labelProps.id\n  });\n\n  // If a touch happens on direct center of ComboBox input, might be virtual click from iPad so open ComboBox menu\n  let lastEventTime = useRef(0);\n  let onTouchEnd = (e: TouchEvent) => {\n    if (isDisabled || isReadOnly) {\n      return;\n    }\n\n    // Sometimes VoiceOver on iOS fires two touchend events in quick succession. Ignore the second one.\n    if (e.timeStamp - lastEventTime.current < 500) {\n      e.preventDefault();\n      inputRef.current.focus();\n      return;\n    }\n\n    let rect = (e.target as Element).getBoundingClientRect();\n    let touch = e.changedTouches[0];\n\n    let centerX = Math.ceil(rect.left + .5 * rect.width);\n    let centerY = Math.ceil(rect.top + .5 * rect.height);\n\n    if (touch.clientX === centerX && touch.clientY === centerY) {\n      e.preventDefault();\n      inputRef.current.focus();\n      state.toggle(null, 'manual');\n\n      lastEventTime.current = e.timeStamp;\n    }\n  };\n\n  // VoiceOver has issues with announcing aria-activedescendant properly on change\n  // (especially on iOS). We use a live region announcer to announce focus changes\n  // manually. In addition, section titles are announced when navigating into a new section.\n  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen\n    ? state.collection.getItem(state.selectionManager.focusedKey)\n    : undefined;\n  let sectionKey = focusedItem?.parentKey ?? null;\n  let itemKey = state.selectionManager.focusedKey ?? null;\n  let lastSection = useRef(sectionKey);\n  let lastItem = useRef(itemKey);\n  useEffect(() => {\n    if (isAppleDevice() && focusedItem != null && itemKey !== lastItem.current) {\n      let isSelected = state.selectionManager.isSelected(itemKey);\n      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;\n      let sectionTitle = section?.['aria-label'] || (typeof section?.rendered === 'string' ? section.rendered : '') || '';\n\n      let announcement = stringFormatter.format('focusAnnouncement', {\n        isGroupChange: section && sectionKey !== lastSection.current,\n        groupTitle: sectionTitle,\n        groupCount: section ? [...getChildNodes(section, state.collection)].length : 0,\n        optionText: focusedItem['aria-label'] || focusedItem.textValue || '',\n        isSelected\n      });\n\n      announce(announcement);\n    }\n\n    lastSection.current = sectionKey;\n    lastItem.current = itemKey;\n  });\n\n  // Announce the number of available suggestions when it changes\n  let optionCount = getItemCount(state.collection);\n  let lastSize = useRef(optionCount);\n  let lastOpen = useRef(state.isOpen);\n  useEffect(() => {\n    // Only announce the number of options available when the menu opens if there is no\n    // focused item, otherwise screen readers will typically read e.g. \"1 of 6\".\n    // The exception is VoiceOver since this isn't included in the message above.\n    let didOpenWithoutFocusedItem =\n      state.isOpen !== lastOpen.current &&\n      (state.selectionManager.focusedKey == null || isAppleDevice());\n\n    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {\n      let announcement = stringFormatter.format('countAnnouncement', {optionCount});\n      announce(announcement);\n    }\n\n    lastSize.current = optionCount;\n    lastOpen.current = state.isOpen;\n  });\n\n  // Announce when a selection occurs for VoiceOver. Other screen readers typically do this automatically.\n  let lastSelectedKey = useRef(state.selectedKey);\n  useEffect(() => {\n    if (isAppleDevice() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {\n      let optionText = state.selectedItem['aria-label'] || state.selectedItem.textValue || '';\n      let announcement = stringFormatter.format('selectedAnnouncement', {optionText});\n      announce(announcement);\n    }\n\n    lastSelectedKey.current = state.selectedKey;\n  });\n\n  useEffect(() => {\n    if (state.isOpen) {\n      return ariaHideOutside([inputRef.current, popoverRef.current]);\n    }\n  }, [state.isOpen, inputRef, popoverRef]);\n\n  return {\n    labelProps,\n    buttonProps: {\n      ...menuTriggerProps,\n      ...triggerLabelProps,\n      excludeFromTabOrder: true,\n      onPress,\n      onPressStart,\n      isDisabled: isDisabled || isReadOnly\n    },\n    inputProps: mergeProps(inputProps, {\n      role: 'combobox',\n      'aria-expanded': menuTriggerProps['aria-expanded'],\n      'aria-controls': state.isOpen ? menuProps.id : undefined,\n      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)\n      'aria-autocomplete': 'list',\n      'aria-activedescendant': focusedItem ? getItemId(state, focusedItem.key) : undefined,\n      onTouchEnd,\n      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.\n      autoCorrect: 'off',\n      // This disable's the macOS Safari spell check auto corrections.\n      spellCheck: 'false'\n    }),\n    listBoxProps: mergeProps(menuProps, listBoxProps, {\n      autoFocus: state.focusStrategy,\n      shouldUseVirtualFocus: true,\n      shouldSelectOnPressUp: true,\n      shouldFocusOnHover: true,\n      linkBehavior: 'selection' as const\n    }),\n    descriptionProps,\n    errorMessageProps,\n    isInvalid,\n    validationErrors,\n    validationDetails\n  };\n}\n","const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}